{"./":{"url":"./","title":"Introduction","keywords":"","body":" gitbook(hycPEXM) for notes1. issue1.1. chapter numbering1.2. gitbook install [mathjax/mathjax-pro] gitbook(hycPEXM) for notes gitbook for Github Pages(https://hycpexm.github.io/gitbook/) gitbook init gitbook install book sm: would replace 'space' with %20... 若文件名中带有空格，在SUMMARY.md里会把第一个出现的d空格转换成%20，此外若文件名含'-'这种特殊字符，在SUMMARY.md里无法正确地生成它，所以还需手动修改SUMMARY.md，以保证整个目录结构的正确；还有就是用完这个命令就不要再运行gitbook init了，否则生成错误的文件还得一个个删 gitbook serve 1. issue 1.1. chapter numbering \"theme-default\": { \"showLevel\": true } } 为什么每一章的起始编号都是1？ 1.2. gitbook install [mathjax/mathjax-pro] 报错： info: install plugin \"mathjax-pro\" (*) from NPM with version 0.0.6 fetchMetadata -> 304 / |#############################################-----------------------------------------------------------------------------------------------------------------| C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\node_modules\\aproba\\index.js:25 if (args[ii] == null) throw missingRequiredArg(ii) ^ Error: Missing required argument #1 at andLogAndFinish (C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\fetch-package-metadata.js:31:3) at fetchPackageMetadata (C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\fetch-package-metadata.js:51:22) at resolveWithNewModule (C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\install\\deps.js:490:12) at C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\install\\deps.js:491:7 at C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50 at C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\fetch-package-metadata.js:37:12 at addRequestedAndFinish (C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\fetch-package-metadata.js:67:5) at returnAndAddMetadata (C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\fetch-package-metadata.js:121:7) at pickVersionFromRegistryDocument (C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\lib\\fetch-package-metadata.js:138:20) at C:\\Users\\hyc\\.gitbook\\versions\\3.2.3\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50 { code: 'EMISSINGARG' } 解决方法： npm install mathjax@2.7.7 -g 在项目文件夹npm install mathjax@2.7.7 npm下载插件：npm i gitbook-plugin-mathjax-pro 在book.json中写入mathjax-pro的配置 { \"plugins\": [\"mathjax-pro\"] } gitbook install 但是显示效果不太好，最后改用'katex-plus'插件来代替，虽然它无法识别所有latex语法 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 04:43:47 "},"AI/":{"url":"AI/","title":"AI","keywords":"","body":" AI AI 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"C&CPP/":{"url":"C&CPP/","title":"C/CPP","keywords":"","body":" C/C++ C/C++ 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"CS/":{"url":"CS/","title":"CS","keywords":"","body":" CS CS 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"English/":{"url":"English/","title":"English","keywords":"","body":" English English English_notes 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"English/useful phrases and technical term.html":{"url":"English/useful phrases and technical term.html","title":"Useful Phrases And Technical Term","keywords":"","body":" mathematics precede vs follow vs prefix CS1. Troubleshooting vs Debugging mathematics two raised to the power of the bit position : 2bit position 2^{\\text{bit position}} 2bit position numerator 分子 denominator分母 delimiter 分隔符，定界符 precede vs follow vs prefix A precedes B. B precedes C. / A comes before B. B comes before C. B follows A. C follows B. / B comes after A. C comes after B. B is preceded by A. C is preceded by B. A is followed by B. B is followed by C. Therefore, precedes = is followed by follows = is preceded by prefixed with 以。。。为前缀 CS Computer programmers are bombarded with jargon and terminology. be bombarded with jargon: 行话 1. Troubleshooting vs Debugging Troubleshooting vs Debugging: What’s the Difference & Best Practices – Stackify As already mentioned, debugging is considered a subset of troubleshooting. However, troubleshooting does not always entail solving the problem at that moment in time. There may be procedural constraints or workflow protocols that prevent the issue from being solved immediately. Debugging, on the other hand, is meant to discover and fix a problem all in the same session, whenever possible. People often use the two terms interchangeably, which can add to the confusion. 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"Git/":{"url":"Git/","title":"Git","keywords":"","body":" Git Git 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"Linux/":{"url":"Linux/","title":"Linux","keywords":"","body":" Linux Linux linux_notes 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"Linux/1. test.html":{"url":"Linux/1. test.html","title":"1. test","keywords":"","body":" Test1. Linux Device Driver : an example for testing syntax highlighting2. testing image3. testing math equations Test 1. Linux Device Driver : an example for testing syntax highlighting #include #include #include #include /* for put_user */ //copy_to_user /* //自定义初始化和退出 int my_init(void); void my_exit(void); module_init(my_init); module_exit(my_exit); */ int init_module(void) { //注册 int register_chrdev(unsigned int major, const char *name, struct file_operations *fops); unsigned Major = register_chrdev(0, DEVICE_NAME, &fops); //0代表由系统自动分配主设备号， //否则给出一个正整数就表示主设备号 } void cleanup_module(void) { int unregister_chrdev(unsigned int major, const char *name); } int device_open(struct inode *, struct file *); int device_release(struct inode *, struct file *); ssize_t device_read(struct file *, char *, size_t, loff_t *); ssize_t device_write(struct file *, const char *, size_t, loff_t *); long device_ioctl(struct file *, unsigned int, unsigned long); /* unsigned long copy_to_user(void __user *to,const void *from,unsigned long count); //将数据从内核拷贝至用户空间，用于read操作 unsigned long copy_from_user(void *to,const void __user *from,unsigned long count); //将数据从用户空间拷贝到内核中，用于write操作 */ struct file_operations fops = { read: device_read, write: device_write, open: device_open, release: device_release, unlocked_ioctl: device_ioctl }; 2. testing image 3. testing math equations ℏb‾⋅ε‾888‾dddd\r \r \\frac{\\hbar \\underline{b} \\, \\cdot \\,\\overline{\\varepsilon} }{ \\underline{888} dddd}\r \r 888​ddddℏb​⋅ε​ ℏb‾⋅ε‾888‾dddd\\frac{\\hbar \\underline{b} \\, \\cdot \\,\\overline{\\varepsilon} }{ \\underline{888} dddd}888​ddddℏb​⋅ε​ ..................... 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 04:32:43 "},"Mathematica/":{"url":"Mathematica/","title":"Mathematica","keywords":"","body":" Mathematica Mathematica 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"Matlab/":{"url":"Matlab/","title":"Matlab","keywords":"","body":" MATLAB MATLAB 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"Python/":{"url":"Python/","title":"Python","keywords":"","body":" Python Python 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"Weekly Reports/":{"url":"Weekly Reports/","title":"Weekly Reports","keywords":"","body":" 周报 周报 每两周记录一次 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:45 "},"Weekly Reports/2022年/2022-01-09.html":{"url":"Weekly Reports/2022年/2022-01-09.html","title":"2022-01-09","keywords":"","body":"1. 前两周目标2. 工作内容2.1. 踩坑耽误好多时间3. 后两周目标1. 前两周目标 完成最后一项期末大作业和最后两份近代物理实验报告 linux系统编程网课学到父子进程gdb调试88/187 操作系统网课研究一下绪论部分的实验项目 数据结构继续学习搜索树 抽空复习模电、数电 2. 工作内容 linux系统编程网课学到父子进程gdb调试82/187 主要内容有： 目录操作函数：opendir(), closedir(),readdir()... 用函数调用的方式来实现ls -R的功能... dup(),dup2() 关于进程（PCB进程控制块）、虚拟内存和物理内存映射关系、环境变量、fork函数...的概念与原理 学习了git与github的基本操作与命令，比如git fetch/ pull/ add/ commit /push/ log等。上传了一些文件到我的GitHub仓库，创建了Github Pages个人主页，目前个人主页还很不完善，需等以后慢慢改善。 创建Github Pages个人主页耽误了我很多时间，因为配置过程中遇到了很多软件相关的bug，记录在踩坑耽误好多时间，我这么做其实偏离了我工作的主要主线，所以这是我的不对。此外，复习考试、期末大作业（还没搞定）也花了我不少时间，所以这两周进展还是比较慢的。 后续周报可能就以这种在线网页的形式来发布。 2.1. 踩坑耽误好多时间 GitHub Page配置jekyll相关主题时，安装的ruby不能是最近的几个版本，需要是2.7或之前的版本，不然版本不匹配，会出现各种问题。而且还要按照官方的说明Dependency versions | GitHub Pages来安装相关软件包。在选择jekyll主题fork到自己的仓库下，并配置到github.io时，也会出现很多小问题，导致网页无法正常显示，尝试修改.js，.css，.html也无法解决。 将gitbook配置到Github Page上去时，安装的node.js也不能是最近的几个版本，经试验和查资料应该是要12开头的版本或之前的；但有时还是会遇到版本不匹配问题，这时候还得修改.js等源文件；此外，gitbook实际使用时，mathjax插件无法安装成功，网上也没有相关的帖子，至今没有解决。 官方似乎已经不维护gitbook-cli及插件了，所以使用gitbook时会出现很多小bug，很难解决，网上也很少能找到相关资料。 以后可能就会尝试转向notion，语雀，wolai这样的共享云文档来做记录了，或者直接用国内的博客网站。应该会比我现在用的方法方便很多。 3. 后两周目标 linux系统编程网课学到99/187：waitpid回收多个子进程 阅读生物物理相关文献，学习相关知识和技能，准备开题报告 操作系统网课研究一下绪论部分的实验项目：控制系统启动，添加系统调用 数据结构继续学习搜索树 抽空复习模电、数电 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-23 21:30:23 "},"Weekly Reports/2022年/2022-01-23.html":{"url":"Weekly Reports/2022年/2022-01-23.html","title":"2022-01-23","keywords":"","body":"1. 前两周目标2. 工作内容3. 思考与疑问4. 后两周目标1. 前两周目标 linux系统编程网课学到99/187：waitpid回收多个子进程 阅读生物物理相关文献，学习相关知识和技能，准备开题报告 操作系统网课研究一下绪论部分的实验项目：控制系统启动，添加系统调用 数据结构继续学习搜索树 抽空复习模电、数电 2. 工作内容 linux系统编程学到100/187 内容主要涉及： exec函数族 孤儿进程和僵尸进程的概念 wait、waitpid函数回收子进程 阅读两篇生物物理相关文献 阅读SLAM，事件相机相关文章，见下面列举的： SLAM: 大牛讲堂｜SLAM第一篇：基础知识 | 雷峰网 (leiphone.com) 大牛讲堂｜SLAM最终话：视觉里程计 | 雷峰网 (leiphone.com) (51条消息) 关于slam_William Zhao's notes-CSDN博客_slam 国外 Simultaneous localization and mapping - Wikipedia (52条消息) 深度/RGBD相机简介_凌晨四点天使之城的博客-CSDN博客_rgbd相机 （深度/RGB-D相机简介_哔哩哔哩_bilibili） SLAM简介 - 知乎 (zhihu.com) Active SLAM – Decision Making for Robotics – Mini Project 1 (manikamakam.github.io) 语义SLAM基础与论文解析 - 知乎 (zhihu.com) (52条消息) 语义SLAM综述aj的博客-CSDN博客语义slam 事件相机： 什么是事件相机？_输出 (sohu.com) (52条消息) 事件相机（Event Camera）及相关研究简介——新一代相机？新的计算机视觉领域？Cyril的博客-CSDN博客事件相机 (47 封私信 / 81 条消息) 什么是事件相机，计算机视觉中事件相机这一方向需要学哪些相关知识？ - 知乎 (zhihu.com) 收集了一些论文： 先看了这篇比较简短的：Singandhupe, Ashutosh, and Hung Manh La. “A Review of SLAM Techniques and Security in Autonomous Driving.” In 2019 Third IEEE International Conference on Robotic Computing (IRC), 602–7. Naples, Italy: IEEE, 2019. https://doi.org/10.1109/IRC.2019.00122. 刚开始读：Cadena, Cesar, Luca Carlone, Henry Carrillo, Yasir Latif, Davide Scaramuzza, José Neira, Ian Reid, and John J. Leonard. “Past, Present, and Future of Simultaneous Localization and Mapping: Toward the Robust-Perception Age.” IEEE Transactions on Robotics 32, no. 6 (December 2016): 1309–32. https://doi.org/10.1109/TRO.2016.2624754. 下面是一些关于CV&PR, SLAM, Event Camera资料汇总的网站（资料很丰富，还没看） 收录事件视觉领域论文的github网址：uzh-rpg/event-based_vision_resources (github.com) Event Cameras, Event camera SLAM, Event-based Vision, Event-based Camera, Event SLAM (uzh.ch) qxiaofan/awesome-3d-computer-vision-papers-daily: 主要记录计算机视觉、VSLAM、点云、结构光、机械臂抓取、三维重建、深度学习、自动驾驶等前沿paper与文章。 (github.com) 事件相机相关的文章： 1、题目：系列篇|一文尽览事件相机原理 作者：董岩 2、题目：一种事件相机描述子——DART 作者：董岩 3、题目：CVPR2020事件相机（Event Camera）研究文章汇总 作者：董岩 4、题目：Ultimate SLAM？利用事件相机解锁高速运动、高动态范围场景 作者：薛轲翰 5、题目：事件相机特征跟踪-EKLT方法 作者：董岩 6、题目：事件相机特征跟踪-概率数据关联法 作者：董岩 7、题目：事件相机特征跟踪-模板跟踪方法 作者：董岩 8、题目：事件相机角点检测，从原理到demo 作者：董岩 9、题目：系列篇|事件相机-数据集与仿真器 作者：董岩 SLAM最新论文整理 - 知乎 (zhihu.com) CVPR 2021 SLAM 相关论文汇总 - 知乎 (zhihu.com) 3. 思考与疑问 我看了一些介绍SLAM的文章，其中有很多数学、算法，挺复杂的，而且文章对于数学、算法的细节写得比较简略和跳跃，我看不太懂，这些知识现阶段要掌握吗？ 4. 后两周目标 linux系统编程学到120/187：无血缘关系进程间mmap通信 学完二叉搜索树（邓俊辉） 操作系统网课研究绪论部分的实验项目：控制系统启动，添加系统调用（李治军） 继续阅读生物物理相关文献；入门pytorch（毕业论文） 开始研究地平线开发板 把上次还没学完的git入门教程学完 抽空复习模电、数电 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-02-06 17:48:41 "},"Weekly Reports/2022年/2022-02-06.html":{"url":"Weekly Reports/2022年/2022-02-06.html","title":"2022-02-06","keywords":"","body":"1. 前两周工作目标2. 本两周工作内容3. 思考与疑问4. 后两周工作目标1. 前两周工作目标 linux系统编程学到120/187：无血缘关系进程间mmap通信 学完二叉搜索树（邓俊辉） 操作系统网课研究绪论部分的实验项目：控制系统启动，添加系统调用（李治军） 继续阅读生物物理相关文献；入门pytorch（毕业论文） 开始研究地平线开发板 把上次还没学完的git入门教程学完 抽空复习模电、数电 2. 本两周工作内容 学完git教程剩余部分 分支管理 多人协作 Git tag & Github releases Git Flow工作流程 linux系统编程学至124/187，主要内容是进程间通信中的： 管道，命名管道fifo，pipe函数 通过文件实现进程间通信 存储映射 I/O与mmap函数 阅读事件相机、SLAM相关资料，记录如下： 通篇略读了这篇slam综述，还是有不少没有理解的地方： Cadena, Cesar, Luca Carlone, Henry Carrillo, Yasir Latif, Davide Scaramuzza, José Neira, Ian Reid, and John J. Leonard. “Past, Present, and Future of Simultaneous Localization and Mapping: Toward the Robust-Perception Age.” IEEE Transactions on Robotics 32, no. 6 (December 2016): 1309–32. https://doi.org/10.1109/TRO.2016.2624754. 常见事件相机分类 Dynamic Vision Sensor(DVS) 仅输出事件流信息 Asynchronous Time Based Image Sensor(ATIS) 输出事件流与灰度信息 Dynamic and Active Pixel Vision Sensor(DAVIS) 输出事件流与灰度信息 高频名词 GEF E2VID U-net Attention机制 Event-based SR （Super Resolve超分辨；超分辨率重建） warping; warp event to image; event to intensity (image)；E2I由E2VID和FSRCNN组成 基于GAN、LSTM、CNN、SNN、RNN的方法 Event Cameras, Event camera SLAM, Event-based Vision, Event-based Camera, Event SLAM (uzh.ch)这个苏黎世大学的网站整理了近几年事件相机相关的工作进展 事件相机实现轻量化人脸识别的方法应该是由类似于SqueezeNet、MobileNet、ShuffleNet(V2)、Xception这样的轻量化CNN来实现的（有待后续调研验证），这属于模式识别的范畴，它包含于一个更广的范畴：事件信号触发与后续处理相结合的技术（这也应该是我关注的重点，刚开始走弯路没搞清要带着什么目的去看资料），这应该能在uzh-rpg/event-based_vision_resources (github.com)网站中的Feature Detection and Tracking、Pattern recognition、Signal Processing、Segmentation、Object Pose Estimation、SLAM (Simultaneous Localization And Mapping)等分类（如下图所示）中找到相关文献，应该注意recognition，event-driven，processing这样的关键字。 CVPR 2021 Workshop on Event-based Vision (tub-rip.github.io) 这个网站整理了2021CVPR国际事件相机会议的内容，收集了会议的视频和slides，以下内容我认为值得关注一下（还没看）： Event-driven convolution based processing Back to Event Basics: Self-Supervised Learning of Image Reconstruction for Event Cameras via Photometric Constancy - MAVLab (tudelft.nl) Event-based vision and processing for tiny drones. 我看了这个讲座：Yulia Sandamirskaya. Neuromorphic computing hardware and event based vision: a perfect match? - YouTube，主要讲了将硬件（类似Intel Loihi，IBM TrueNorth这样的神经形态计算芯片和事件相机)与软件(主要是人工智能方法)相结合的研究、应用和前景 基于SNN识别事件序列：人的动作 Stewart, K., Orchard, G., Shrestha, S. B., & Neftci, E. (2020). Online few-shot gesture learning on a neuromorphic processor. IEEE Journal on Emerging and Selected Topics in Circuits and Systems, 10(4), 512-521. 索尼的事件相机 Sony Group Portal - AI Initiatives - Event-based vision sensor (EVS) Sony to Release Two Types of Stacked Event-Based Vision Sensors with the Industry’s Smallest 4.86μm Pixel Size for Detecting Subject Changes Only Delivering High-Speed, High-Precision Data Acquisition to Improve Industrial Equipment Productivity｜News Releases｜Sony Semiconductor Solutions Group (sony-semicon.co.jp) Technology：EVS｜Image Sensor：Industry｜Products｜Sony Semiconductor Solutions Group (sony-semicon.co.jp) 简要介绍了EVS的工作机制 事件相机调研(Event-based Vision: A Survey[3]) - 知乎 (zhihu.com) 论文阅读：Event-based Vision：A Survey（事件相机英文综述） - 知乎 (zhihu.com) 论文阅读：神经形态视觉传感器（事件相机）的研究进展及应用综述 - 知乎 (zhihu.com) CVPR2020事件相机（Event Camera）研究文章汇总 - 知乎 (zhihu.com) 2021事件相机(Event-based)各大顶会论文个人整理 - 知乎 (zhihu.com) Z. W. Wang, P. Duan, O. Cossairt, A. Katsaggelos, T. Huang and B. Shi, \"Joint Filtering of Intensity Images and Neuromorphic Events for High-Resolution Noise-Robust Imaging,\" 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), 2020, pp. 1606-1616, doi: 10.1109/CVPR42600.2020.00168. 文章提出了一个全新的优化框架，guided event filtering (GEF)。这个框架结合了普通相机和事件相机的数据，估计运动参数与导向滤波、超分辨率等任务，同时这个框架后续可以用于特征跟踪等任务。其基本思想是事件相机积累图的边缘，和传统图像的梯度，理论上是相同的。文中同样采用RPG提出的最大化对比度的方式进行运动参数估计，只是修正了目标函数，加入了灰度图像的梯度，减小了事件噪声的影响。 以下是我目前筛选出来的文章，大部分只看了摘要 「事件相机」告别模糊！CVPR 2021发表视频慢动作的新sota，还发了160FPS的数据集 - 知乎 (zhihu.com) https://rpg.ifi.uzh.ch/docs/CVPR21_Gehrig.pdf TimeLens: Event-based Video Frame Interpolation (CVPR 2021) - YouTube slides.pdf (uzh.ch) S. Tulyakov, D. Gehrig, S. Georgoulis, J. Erbach, M. Gehrig, Y. Li, D. Scaramuzza Time Lens: Event-based Video Frame Interpolation IEEE Conference on Computer Vision and Pattern Recognition, 2021. 基于事件的帧插值方法(event-based frame interpolation)通常采用基于综合(synthesis-based)的方法，其中预测的帧残差直接应用于关键帧(key-frames)。然而，虽然这些方法可以捕捉非线性运动，但它们会受到重影的影响，在低纹理、事件较少的区域表现不佳。因此，基于综合和基于流程的方法是互补的。论文提出的Time Lens方法能够有效利用二者的优势。论文在三个合成基准和两个实际基准上对我们的方法进行了广泛的评估，结果显示，与最先进的基于帧和基于事件的方法相比，PSNR提高了5.21 dB。 Time Lens是一个基于学习的框架，由四个专用模块组成，这些模块互相之间可以进行补充插值，能够同时进行基于warping和合成的插值。 基于warping的插值模块（Interpolation by synthesis），通过使用从各个事件序列估计的光流warping边界RGB关键帧来估计新帧 warping refinement模块通过计算剩余光流来改进这种帧估计 合成插值模块通过直接融合来自边界关键帧和事件序列的输入信息来估计新帧 基于注意力的平均模块结合了基于warping和基于合成的插值结果 Time Lens的框架能够使生成的插入帧成为具有颜色和高纹理细节的新帧，同时能够处理非线性运动、光线变化和运动模糊。在整个工作流中，所有的模块都使用相同的骨架结构沙漏网络（hourglass network），沙漏网络能够在收缩和扩张部分之间进行跳跃连接（skip connections）。 论文分享-基于DVS相机的去噪和超分的神经形态事件研究 - 知乎 (zhihu.com) Duan, Peiqi & Wang, Zihao & Zhou, Xinyu & Ma, Yi & Shi, Boxin. (2021). EventZoom: Learning to Denoise and Super Resolve Neuromorphic Events. 10.1109/CVPR46437.2021.01263. 论文提出了EventZoom，一个具有3D U-Net骨架结构的深度神经框架。EventZoom以一种噪声对噪声的方式进行训练，其中网络的两端是未经过滤的噪声事件，强制执行无噪声事件恢复。为了提高分辨率，EventZoom合并了一个由高分辨率图像监督的事件到图像模块。 EventZoom可以提高应用程序的性能，包括基于事件的视觉对象跟踪和图像重建： 物体追踪，利用E-MS追踪方法，利用了Mean Shift 聚类 和卡尔曼滤波的方法进行物体进行分类进而追踪。 论文通过可视化和量化结果两部分对于超分部分进行了简要分析，与SOTA的图像重建算法E2SRI方法相比，图像重建后质量通过PSNR、SSIM、MSE指标进行评价，发现在质量更好，误差更小的前提下，运行时间是原算法的1/10。 论文实现了去噪与超分的联合过程，并且实现了事件到图像的转换模块，主要解决了两类问题，一是去噪过程中的错误检测问题，二是超分过程中的模型的性能与复杂度的权衡。 论文中的客观的性能评价指标在于低延时，在去噪模块上，处理速度是同类的事件相机的40倍，而在超分重建过程中，处理速度是同类SOTA算法的10倍；采用的神经网络包括3D U-Net 、E2VID、FSRCNN，分别用于端到端的事件降噪器[E2E]、Event2Image的转换模块[E2I]、超分辨率模块[E2SRI]；数据集采用了高帧率视频数据集NFS、DVSNOISE20 、RGB-DAVIS分别用于超分、去噪超分联合、事件相机与帧相机联合的模型训练。最终将训练的网络应用于高级机器视觉任务中的对象追踪和图像重建。 文献的局限性表现在分辨率低，固件设施不够完善，因此限制了FPS与HDR。 3. 思考与疑问 没规划好时间，完成的工作与目标差得有点多。 应该改进一下看文献的方法，提高阅读效率。阅读文献时对于看不懂的数学、算法和不了解的专业术语、方法不必太过于纠结，否则会看得很慢，即便细看了没理解也不会有什么印象。此外，为了调研，大部分文献先看重点关注的主要内容就好，不然每篇文献都钻进去研读通读会花很多时间。 目前还没有抓住对近年来事件相机的主流技术和事件信号触发结合后续处理的调研这条主线，文献、资料太多，有点无从下手的感觉。为了找突破口，我先查阅了网上的资料，不过比较零散，看了以后大概知道论文做了什么工作，但是无法把握哪些才算是主流技术。 后面我打算先从综述类文献先读起，先看Event-based Vision: A Survey和两篇中文综述：神经形态视觉传感器的研究进展及应用综述；基于事件相机的定位与建图算法：综述。此外，重点关注uzh-rpg/event-based_vision_resources (github.com)中的Review Papers、Pattern Recognition、Signal Processing分类中的文献，以及CVPR2020事件相机（Event Camera）研究文章汇总 - 知乎 (zhihu.com)和2021事件相机(Event-based)各大顶会论文个人整理 - 知乎 (zhihu.com)这两篇推文中列举的文献。 不知道老师对此有什么建议或者有什么资料推荐一下。 4. 后两周工作目标 阅读生物物理RNA结构预测相关文献，写开题报告；入门pytorch 继续学习linux系统编程 学完二叉搜索树（邓俊辉） 阅读、整理事件相机相关文献 操作系统网课研究绪论部分的实验项目：控制系统启动，添加系统调用（李治军） 研究地平线开发板 抽空复习模电、数电 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-02-20 17:32:20 "},"Weekly Reports/2022年/2022-02-20.html":{"url":"Weekly Reports/2022年/2022-02-20.html","title":"2022-02-20","keywords":"","body":"1. 前两周工作目标2. 本两周工作内容3. 后两周工作内容1. 前两周工作目标 阅读生物物理RNA结构预测相关文献，写开题报告；入门pytorch 继续学习linux系统编程 学完二叉搜索树（邓俊辉） 阅读、整理事件相机相关文献 操作系统网课研究绪论部分的实验项目：控制系统启动，添加系统调用（李治军） 研究地平线开发板 2. 本两周工作内容 前一周都在看毕业论文相关文献，写开题报告 数据结构学完搜索树的部分：AVL树，伸展树，B树，红黑树，kd树 linux系统编程刚开始学信号的部分 刚开始研究pytorch和TPU编程比赛 3. 后两周工作内容 学习pytorch；研究论文源码 研究TPU编程比赛 数据结构学习词典、散列查找 linux系统编程学完信号部分，到143/187 阅读、整理事件相机相关文献 操作系统网课研究绪论部分的实验项目：控制系统启动，添加系统调用（李治军） 研究地平线开发板 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-02-20 20:48:59 "},"嵌入式/":{"url":"嵌入式/","title":"嵌入式","keywords":"","body":" 嵌入式 嵌入式 使用知识共享 署名-相同方式共享 4.0协议发布            updated 2022-01-10 03:56:46 "}}